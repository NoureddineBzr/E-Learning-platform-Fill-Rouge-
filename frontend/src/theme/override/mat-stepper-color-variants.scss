@use 'sass:map';
@use 'sass:meta';
@use '@angular/material' as mat;

$_ripple-opacity: 0.1;



// Applies a property to an mat-icon element for each of the supported palettes.
@mixin _theme-property($theme, $property, $hue, $variants) {


  @each $variant, $variant-palette in $variants {
    &.mat-#{$variant} {
      #{$property}: mat.get-color-from-palette($variant-palette, $hue);
    }
  }
}

@mixin color($config-or-theme, $variants) {
  $config: mat.get-color-config($config-or-theme);



  .mat-step-header:not(:enabled){
    @include _theme-property($config, '--mat-stepper-header-icon-foreground-color', default-contrast, $variants);
    @include _theme-property($config, '--mat-stepper-header-selected-state-icon-background-color', default, $variants);
    @include _theme-property($config, '--mat-stepper-header-selected-state-icon-foreground-color', default-contrast, $variants);
    @include _theme-property($config, '--mat-stepper-header-done-state-icon-background-color', default, $variants);
    @include _theme-property($config, '--mat-stepper-header-done-state-icon-foreground-color', default, $variants);
    @include _theme-property($config, '--mat-stepper-header-edit-state-icon-background-color', default, $variants);
    @include _theme-property($config, '--mat-stepper-header-edit-state-icon-foreground-color',  default-contrast, $variants);
   
 

  }

 
}